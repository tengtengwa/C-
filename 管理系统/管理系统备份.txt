#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>
#include<string.h>
#include<windows.h>
#define LEN sizeof(struct stu)

struct stu{
	char name[50];
	char num[50];
	int age;
	float C;
	float math;
	float Eng;
	float PE;
	struct stu *next;
};

struct         //学生账号密码
{
    char account[20];
    char passw[20];
}user_stu[20];

struct        //管理员账号密码
{
    char account[20];
    char passw[20];
}user_manager[20];

struct stu *head;

struct stu *Creat(int n)
{
	void menu_print();
    struct stu *p1,*p2;

    if(n<=0)
    {
        printf("输入有误，请重新输入\n\n");
        return;
    }

	system("cls");
	int i;
	for(i=1;i<=n;i++)
	{
		p1=(struct stu*)malloc(LEN);
		menu_print();
		scanf("%s %s %d %f %f %f %f",p1->name,p1->num,&p1->age,&p1->C,&p1->math,&p1->Eng,&p1->PE);
		p1->next=NULL;
		if(i==1)
		{
			head=p2=p1;
		}
		else
		{
			p2->next=p1;
			p2=p1;
		}
	}
	return (head);
    printf("\n\n数据已成功保存\n\n");
}

int Creat_num()
{
	int n;
	printf("\n\n输入你想添加的学生信息个数:\n");
	scanf("%d",&n);
	return n;
}

//信息表头
void menu_print()
{
	printf("_______________________________________________\n");
	printf("姓名  学号     年龄  C语言  数学  英语  体育成绩\n");
	printf("_______________________________________________\n");
}

//二级菜单，添加信息
int add()
{
	void WriteData_w();
	void WriteData_a();
    struct stu *p1;
    int i;
    system("cls");

    WriteData_a(Creat(Creat_num()));
    system("pause");
    menu_manager();
}

void WriteData_w(struct stu *head)
{
	FILE *fp;
	struct stu *p;

	if((fp=fopen("C:\\stu_detail.txt","w"))==NULL) printf("文件打开出错\n");
	p=head;
	while(p!=NULL)
	{
		if(fprintf(fp,"\n%s %s %d %f %f %f %f",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE)<0)
		{
			printf("数据写入出错\n");
			fclose(fp);
			return;
		}
		p=p->next;
	}
	fclose(fp);
}

void WriteData_a(struct stu *head){
	FILE *fp;
	struct stu *p;

	if((fp=fopen("C:\\stu_detail.txt","a"))==NULL) printf("文件打开出错\n");
	p=head;
	while(p!=NULL)
	{
		if(fprintf(fp,"\n%s %s %d %f %f %f %f",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE)<0)
		{
			printf("数据写入出错\n");
			fclose(fp);
		}
		p=p->next;
	}
	fclose(fp);
}

struct stu *ReadData()
{
    FILE *fp;
    struct stu *head=NULL;
    struct stu *p1=NULL,*p2=NULL;
    if((fp=fopen("C:\\stu_detail.txt","r+"))==NULL)
    {
        printf("错误，文件打开失败\n");
        exit(0);
    }
    while(!feof(fp))
    {
        if((p1=(struct stu*)malloc(LEN))==NULL)
        {
            printf("内存申请出错\n");
            fclose(fp);
            exit(0);
        }
        if(fscanf(fp,"%s %s %d %f %f %f %f",p1->name,p1->num,&p1->age,&p1->C,&p1->math,&p1->Eng,&p1->PE)<0)
        {
            free(p1);
            break;
        }
        if(head==NULL)
        {
            head=p1;
            p2=p1;
        }
        else
        {
            p2->next=p1;
            p2=p1;
        }
    }
    p1->next=NULL;
    fclose(fp);
    return (head);
}

int query_all()
{
    system("cls");
    void menu_print();
    struct stu *p;

    p=ReadData();
    menu_print();
    while(p!=NULL)
    {
        printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE);
        p=p->next;
    }
    printf("\n\n");
}

int query_name()
{
    void menu_print();
    struct stu *p;
    char name[50];
    int flag=0;

    p=ReadData();
    printf("输入你想查询的学生姓名:\n");
    fflush(stdin);
    gets(name);

    system("cls");
    while(p!=NULL){
        if(strcmp(p->name,name)==0)
        {
            flag=1;
            menu_print();
            printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE);
            break;
        }
        else
        p=p->next;
    }
    printf("\n\n");
    if(flag==0) printf("未查询到相关信息\n\n");
}

int query_num()
{
    void menu_print();
    struct stu *p;
    char num[50];
    int flag=0;

    p=ReadData();
    printf("输入你想查询的学生学号:\n");
    fflush(stdin);
    gets(num);

    system("cls");
    while(p!=NULL){
        if(strcmp(p->num,num)==0)
        {
            flag=1;
            menu_print();
            printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE);
            break;
        }
        else
        p=p->next;
    }
    printf("\n\n");
    if(flag==0) printf("未查询到相关信息\n\n");


}

int query_name_num()
{
    void menu_print();
    struct stu *p;
    char name[50],num[50];
    int flag=0;

    p=ReadData();
    printf("输入你想查询的学生姓名和学号:\n");
    fflush(stdin);
    scanf("%s %s",name,num);

    system("cls");
    while(p!=NULL){
        if(strcmp(p->name,name)==0 && strcmp(p->num,num)==0)
        {
            flag=1;
            menu_print();
            printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE);
            break;
        }
        else
        p=p->next;
    }
    printf("\n\n");
    if(flag==0) printf("未查询到相关信息或输入有误\n\n");
}

int query_stu()
{
    system("cls");
    char n;
    while(1)
    {
        printf("\n\n\t\t      ********学生信息查询二级菜单********\n\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                1.按姓名个人查询\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                2.按学号个人查询\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                3.查询全部学生信息\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                4.返回主菜单\n");

        printf("\n\n选择功能:\n");
        fflush(stdin);
        scanf("%c",&n);

        switch(n){
            case'1':
                    query_name();
                    system("pause");
                    query_stu();
                    break;
            case'2':
                    query_num();
                    system("pause");
                    query_stu();
                    break;
            case'3':
                    query_all();
                    system("pause");
                    query_stu();
                    break;
            case'4':
                    menu_stu();
                    break;
            default:printf("输入错误，请重新输入!\n");
                    query_stu();
                    break;
        }
    }
}

//二级查询信息菜单
int query_manager()
{
    system("cls");
    char n;
    while(1)
    {
        printf("\n\n\t\t      ********学生信息查询二级菜单********\n\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                1.查询全部信息\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                2.按姓名查询\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                3.按学号查询\n");
        printf("\t\t        ________________________________\n");
        printf("\t\t                4.返回主菜单\n");

        printf("\n\n选择功能:\n");
        fflush(stdin);
        scanf("%c",&n);

        switch(n){
            case'1':
                    query_all();
                    system("pause");
                    query_manager();
                    break;
            case'2':
                    query_name();
                    system("pause");
                    query_manager();
                    break;
            case'3':
                    query_num();
                    system("pause");
                    query_manager();
                    break;
            case'4':
                    menu_manager();
                    break;
            default:printf("输入错误，请重新输入!\n");
                    query_manager();
                    break;
        }
    }
}

int del_infor()
{
    char num[50];
    int flag=0;
    struct stu *p1,*p2,*head;
    head=ReadData();
    p2=head;
    p1=NULL;

    printf("输入要删除的学生信息编号\n");
    fflush(stdin);
    scanf("%s",num);
    if(strcmp(head->num,num)==0)      //待删除的是头结点
    {
        head=head->next;
        free(p2);
        flag=1;
    }
    else
    {
        while(p2!=NULL)
        {
            p1=p2;
            p2=p2->next;

            if(strcmp(p2->num,num)==0)      //待删除的是中间节点,及删除p2指向的节点
            {
                p1->next=p2->next;
                free(p2);
                flag=1;
            }
            if(flag==1) break;
        }
    }

    if(flag==1)
    {
        WriteData_w(head);
        printf("\n数据已成功删除\n");
    }

    else printf("未找到相关信息,请重新输入\n");

}

int change1()
{
    struct stu *p1;
    char num[50];

    printf("输入要修改的学生学号\n");
    fflush(stdin);
    scanf("%s",num);
    head=ReadData();
    p1=head;              //p1保存已检查过的节点

    while(p1!=NULL)
    {
        if(strcmp(p1->num,num)==0)      //待修改的是头结点
        {
            menu_print();
            scanf("%s %s %d %f %f %f %f",p1->name,p1->num,&p1->age,&p1->C,&p1->math,&p1->Eng,&p1->PE);
        }
        p1=p1->next;
    }
    if(p1!=NULL) printf("未找到相关信息,请重新输入\n");
    else WriteData_w(head);
}



//信息修改及删除二级菜单
int change()
{
	system("cls");
	printf("\n\n\t\t      ********学生信息修改二级菜单********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.按学号删除信息\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.修改学生信息\n");
    printf("\t\t        ________________________________\n");
	printf("\t\t                3.返回主菜单\n");

    int n;
    printf("选择相应功能\n");
    scanf("%d",&n);
    while(n<1 || n>3)
    {
        printf("错误，请重新输入\n");
        scanf("%d",&n);
    }
    if(n==1)
    {
        del_infor();
        system("pause");
        change();
    }
    else if(n==2)
    {
        change1();
        printf("\n\n数据已成功修改\n");
        system("pause");
        change();
    }
    else if(n==3)
    {
        menu_manager();
    }
}

int tongji_3()
{
    system("cls");

    printf("_________________________________________________________________\n");
	printf("姓名  学号     年龄  C语言  数学  英语  体育成绩 总成绩 平均成绩\n");
	printf("_________________________________________________________________\n");

    struct stu *p,*p1;
    head=ReadData();
    p1=head;    p=head;

    int n=0,num=0,i;
    float sum[50],aver[50];

    while(p1!=NULL)
    {
        sum[n]=p1->C+p1->Eng+p1->math+p1->PE;
        n+=1;
        p1=p1->next;
    }
    n+=1;    //总人数
    for(i=0;i<n;i++) aver[i]=sum[i]/4;
    i=0;
    while(p!=NULL)
    {
        printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-8.1f %-6.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE,sum[i],aver[i]);
        p=p->next;
        i++;
    }


    printf("\n");
}

int tongji_each()
{
    system("cls");
    void menu_print();
    struct stu *p;

    int a1=0,b1=0,c1=0,d1=0,e1=0;
    int a2=0,b2=0,c2=0,d2=0,e2=0;
    int a3=0,b3=0,c3=0,d3=0,e3=0;
    int a4=0,b4=0,c4=0,d4=0,e4=0;
    float per_c,per_math,per_eng,per_pe;
    float n=0.0;

    p=ReadData();
    menu_print();
    do{
        printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p->name,p->num,p->age,p->C,p->math,p->Eng,p->PE);
        //C语言各分数段
        {
            if(p->C>=90) a1++;
            else if(p->C>=80.0 && p->C<90.0) b1++;
            else if(p->C>=70.0 && p->C<80.0) c1++;
            else if(p->C>=60.0 && p->C<70.0) d1++;
            else e1++;
        }
        //数学各分数段
        {
            if(p->math>=90) a2++;
            else if(p->math>=80.0 && p->math<90.0) b2++;
            else if(p->math>=70.0 && p->math<80.0) c2++;
            else if(p->math>=60.0 && p->math<70.0) d2++;
            else e2++;
        }
        //英语各分数段
        {
            if(p->Eng>=90) a3++;
            else if(p->Eng>=80.0 && p->Eng<90.0) b3++;
            else if(p->Eng>=70.0 && p->Eng<80.0) c3++;
            else if(p->Eng>=60.0 && p->Eng<70.0) d3++;
            else e3++;
        }
        //体育各分数段
        {
            if(p->PE>=90) a4++;
            else if(p->PE>=80.0 && p->PE<90.0) b4++;
            else if(p->PE>=70.0 && p->PE<80.0) c4++;
            else if(p->PE>=60.0 && p->PE<70.0) d4++;
            else e4++;
        }
        n+=1.0;
        p=p->next;
    }while(p!=NULL);

    per_c=(n-e1*1.0)/n;
    per_math=(n-e2*1.0)/n;
    per_eng=(n-e3*1.0)/n;
    per_pe=(n-e4*1.0)/n;

    printf("\n\n");
    printf("C语言各分数段人数:\n");
    printf("90分及以上:%d   80~90分:%d   70~80分:%d   60~70分:%d   60分以下:%d    及格率:%.2f%%\n\n",a1,b1,c1,d1,e1,per_c);
    printf("数学各分数段人数:\n");
    printf("90分及以上:%d   80~90分:%d   70~80分:%d   60~70分:%d   60分以下:%d    及格率:%.2f%%\n\n",a2,b2,c2,d2,e2,per_math);
    printf("英语各分数段人数:\n");
    printf("90分及以上:%d   80~90分:%d   70~80分:%d   60~70分:%d   60分以下:%d    及格率:%.2f%%\n\n",a3,b3,c3,d3,e3,per_eng);
    printf("体育各分数段人数:\n");
    printf("90分及以上:%d   80~90分:%d   70~80分:%d   60~70分:%d   60分以下:%d    及格率:%.2f%%\n\n",a4,b4,c4,d4,e4,per_pe);
}

int tongji()
{
    system("cls");
    printf("\n\n\t\t        ********学生信息统计二级菜单********\n\n");
	printf("\t\t        __________________________________________\n");
	printf("\t\t                1.统计每个人总的成绩，平均成绩\n");
	printf("\t\t        __________________________________________\n");
	printf("\t\t                2.统计每一课目各分数段成绩和及格率\n");
	printf("\t\t        __________________________________________\n");
	printf("\t\t                3.返回主菜单\n");

	int n;
	printf("请选择所需功能\n");
	scanf("%d",&n);
	while(n>3 || n<1)
    {
        printf("错误，请重新输入\n");
        scanf("%d",&n);
    }
	if(n==1)
    {
        tongji_3();
        system("pause");
        tongji();
    }
	else if(n==2)
    {
        tongji_each();
        system("pause");
        tongji();
    }
    else if(n==3) menu_manager();
}

int sort_name()     //按姓名升序排序
{
    system("cls");
    struct stu *p1=NULL,*p2=NULL,*r=NULL,tem;
    char name[50],num[50];

    for(p1=head;p1!=NULL;p1=p1->next)
    {
        for(p2=p1->next;p2!=NULL;p2=p2->next)
        {
            if(strcmp(p1->name,p2->name)>0)
            {
                tem=*p1; *p1=*p2; *p2=tem;
                r=p1->next; p1->next=p2->next; p2->next=r;
            }
        }
    }
    menu_print();
    p1=head;
    while(p1!=NULL)
    {
        printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p1->name,p1->num,p1->age,p1->C,p1->math,p1->Eng,p1->PE);
        p1=p1->next;
    }
    printf("\n\n");
}

int sort_num()      //按学号升序排序
{
    system("cls");
    struct stu *p1=NULL,*p2=NULL,*r=NULL,tem;
    char name[50],num[50];

    for(p1=head;p1!=NULL;p1=p1->next)
    {
        for(p2=p1->next;p2!=NULL;p2=p2->next)
        {
            if(strcmp(p1->num,p2->num)>0)
            {
                tem=*p1; *p1=*p2; *p2=tem;
                r=p1->next; p1->next=p2->next; p2->next=r;
            }
        }
    }
    menu_print();
    p1=head;
    while(p1!=NULL)
    {
        printf("%-5s %-9s %-5d %-5.1f %-5.1f %-5.1f %-5.1f\n",p1->name,p1->num,p1->age,p1->C,p1->math,p1->Eng,p1->PE);
        p1=p1->next;
    }
    printf("\n\n");

}


int sort()
{
    system("cls");
    printf("\n\n\t\t      ********学生信息排序二级菜单********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.按姓名升序排序\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.按学号升序排序\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                3.返回主菜单\n");

	char n;
	fflush(stdin);
	printf("请选择相应功能\n");
	scanf("%c",&n);

    switch(n)
    {
        case'1': sort_name(); system("pause"); sort(); break;
        case'2': sort_num(); system("pause"); sort(); break;
        case'3': menu_manager(); break;
        default: printf("输入错误，请重新选择\n"); system("pause"); menu_manager(); break;
    }
}

int menu_manager()
{
	system("cls");
	system("color 1F");
    printf("\n\n\t\t        **********管理员功能菜单********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.信息录入\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.信息查询\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                3.信息删除及修改\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                4.信息统计\n");
    printf("\t\t        ________________________________\n");
	printf("\t\t                5.信息排序\n");
    printf("\t\t        ________________________________\n");
	printf("\t\t                6.管理账户信息\n");
    printf("\t\t        ________________________________\n");
	printf("\t\t                7.退出系统\n");

    head=ReadData();//从文件读取数据

	char n;
	printf("\n\n选择相应功能:\n");
	fflush(stdin);
	scanf("%c",&n);

    switch(n)
    {
        case'1': add(); system("pause"); menu_manager(); break;
        case'2': query_manager(); system("pause"); menu_manager(); break;
        case'3': change(); system("pause"); menu_manager(); break;
        case'4': tongji(); system("pause"); menu_manager(); break;
        case'5': sort(); system("pause"); menu_manager(); break;
        case'6': user_manage(); system("pause"); menu_manager(); break;
        case'7': WriteData_w(head); exit(0); break;
        default: printf("输入错误，请重新选择\n"); system("pause"); menu_manager(); break;
    }
}

int menu_stu()
{
	system("cls");
	system("color 1F");
    printf("\n\n\t\t        *********学生功能菜单********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.信息查询\n");
    printf("\t\t        ________________________________\n");
	printf("\t\t                2.退出系统\n");

	int n;
	printf("\n\n选择相应功能:\n");
	scanf("%d",&n);
	while(n<1 || n>3)
	{
		printf("错误，请重新选择\n");
		scanf("%d",&n);
	}

	if(n==1) query_stu();
	else if(n==2) exit(0);

}


char account[50],passw[50];

int pre_login()
{
	system("cls");
	system("color 9F");
	printf("\n\n\t\t           **********登录选择********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.学生登录\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.管理员登陆\n");

    printf("\n请选择相应功能:\n");
	char n;
	fflush(stdin);
	scanf("%c",&n);

	switch(n){
        case '1':user_stu_login(); break;
        case '2':user_manager_login(); break;
        default:
            printf("输入错误，请重新输入!\n\n");
            system("pause");
            pre_login();
            break;
	}
}

int read_stu_num()
{
    FILE *fp;
    if((fp=fopen("C:\\user_stu.txt","r"))==NULL)
    return 0;
    fseek(fp,0,SEEK_END);
    return (ftell(fp)/40);
    fclose(fp);
}

int read_manager_num()
{
    FILE *fp;
    if((fp=fopen("C:\\user_manager.txt","r"))==NULL)
    return 0;
    fseek(fp,0,SEEK_END);
    return (ftell(fp)/40);
    fclose(fp);
}

int user_manage()
{
    system("cls");
    printf("\n\n\t\t      ********账户信息管理二级菜单********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.管理学生账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.管理管理员账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                3.返回主菜单\n");

    char n;
    fflush(stdin);
    printf("请选择功能:\n");
    scanf("%c",&n);

    switch(n){
        case '1':stu_m(); user_manage(); break;
        case '2':m_m(); user_manage(); break;
        case '3':menu_manager(); break;
        default:printf("输入错误，请重新输入!\n\n"); system("pause"); user_manage(); break;
    }
}

int stu_m()
{
    system("cls");
    printf("\n\n\t\t    ********学生信息管理选择面板********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.添加学生账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.删除学生账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                3.修改学生账户信息\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                4.返回上级菜单\n");

    char n;
    fflush(stdin);
    scanf("%c",&n);

    switch(n){
        case '1':user_add_stu(); stu_m(); break;
        case '2':del_stu(); stu_m(); break;
        case '3':printf("程序猿偷了个懒，请先删除再重新添加账户吧~\n"); system("pause"); stu_m(); break;
        case '4':user_manage(); break;
        default:printf("输入错误，请重新输入!\n\n"); system("pause"); stu_m(); break;
    }
}

int m_m()
{
    system("cls");
    printf("\n\n\t\t    ********管理员信息管理选择面板********\n\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                1.添加管理员账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                2.删除管理员账户\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                3.修改管理员账户信息\n");
	printf("\t\t        ________________________________\n");
	printf("\t\t                4.返回上级菜单\n");

    char n;
    fflush(stdin);
    printf("\n请选择功能:\n");
    scanf("%c",&n);

    switch(n){
        case '1':user_add_manager(); m_m(); break;
        case '2':del_manager(); m_m(); break;
        case '3':printf("程序猿偷了个懒，请先删除再重新添加账户吧~\n"); system("pause"); m_m(); break;
        case '4':user_manage(); break;
        default:printf("输入错误，请重新输入!\n\n"); system("pause"); m_m(); break;
    }
}

int user_add_stu()
{
    FILE *fp;
    int i;
    i=read_stu_num();   //获取已经保存的学生账户个数
    i+=1;
    char account[20],passw[20];

    if((fp=fopen("C:\\user_stu.txt","a"))==NULL)
    {
        printf("文件打开出错!\n");
        system("pause");
        fclose(fp);
        return;
    }
    printf("请输入账号(20位以内):\n");
    scanf("%s",user_stu[i].account);
    printf("\n请输入密码(仅支持20位以内字母和数字):\n");
    scanf("%s",user_stu[i].passw);
    if(fprintf(fp,"\n%s %s",user_stu[i].account,user_stu[i].passw)<0)
    {
        printf("账户保存出错!\n");
        system("pause");
        fclose(fp);
    }
    else
    {
        printf("账户成功保存!\n");
        system("pause");
    }
    fclose(fp);
}

int user_add_manager()
{
    FILE *fp;
    int i;
    i=read_manager_num();   //获取已经保存的管理员账户个数
    i+=1;
    char account[20],passw[20];

    if((fp=fopen("C:\\user_manager.txt","a"))==NULL)
    {
        printf("文件打开出错!\n");
        system("pause");
        fclose(fp);
        return;
    }
    printf("请输入账号(20位以内):\n");
    scanf("%s",user_manager[i].account);
    printf("\n请输入密码(仅支持20位以内数字和字母):\n");
    scanf("%s",user_manager[i].passw);
    if(fprintf(fp,"\n%s %s",user_manager[i].account,user_manager[i].passw)<0)
    {
        printf("账户保存出错!\n");
        system("pause");
        fclose(fp);
    }
    else
    {
        printf("账户成功保存!\n");
        system("pause");
    }
    fclose(fp);
}


int del_stu()
{
    char account[20];
    int i,n;

    printf("输入你想删除的学生账号:\n");
    scanf("%s",account);
    for(i=0;i<=20;i++)
    {
        if(strcmp(account,user_stu[i].account)==0)
        {
            user_stu[i].account[0]='\0';
            user_stu[i].passw[0]='\0';
        }
    }

    FILE *fp;
    n=read_manager_num();   //获取已经保存的管理员账户个数
    n+=1;

    if((fp=fopen("C:\\user_stu.txt","w"))==NULL)
    {
        printf("文件打开出错!\n");
        system("pause");
        fclose(fp);
        return;
    }
    for(i=0;i<n;i++)
    if(fprintf(fp,"%s %s\n",user_stu[i].account,user_stu[i].passw)<0)
    {
        printf("账户保存出错!\n");
        system("pause");
        fclose(fp);
    }
    if(i==n)
    {
        printf("成功删除该账户!\n");
        system("pause");
    }
    fclose(fp);
}

int del_manager()
{
    char account[20];
    int i,n;

    printf("输入你想删除的管理员账号:\n");
    scanf("%s",account);
    for(i=0;i<=20;i++)
    {
        if(strcmp(account,user_manager[i].account)==0)
        {
            user_manager[i].account[0]='\0';
            user_manager[i].passw[0]='\0';
        }
    }

    FILE *fp;
    n=read_manager_num();   //获取已经保存的管理员账户个数
    n+=1;

    if((fp=fopen("C:\\user_manager.txt","w"))==NULL)
    {
        printf("文件打开出错!\n");
        system("pause");
        fclose(fp);
        return;
    }
    for(i=0;i<n;i++)
    if(fprintf(fp,"%s %s\n",user_manager[i].account,user_manager[i].passw)<0)
    {
        printf("账户保存出错!\n");
        system("pause");
        fclose(fp);
    }
    if(i==n)
    {
        printf("成功删除该账户!\n");
        system("pause");
    }
    fclose(fp);
}

int user_manager_login()
{
    FILE *fp;
    char ch,account[20],passw[20];
    int p;

    fp=fopen("C:\\user_manager.txt","r+");

    system("color 9F");
    fflush(stdin);
    printf("\n请输入管理员账号:\n");
    scanf("%s",account);
    printf("请输入密码:\n");
    p=0;

    {
        while((ch=getch())!='\r')
        {
            if(ch==8)
            {
                putchar('\b');
                putchar(' ');
                putchar('\b');
                if(p>0) p--;
            }
            if(!isalpha(ch) && !isdigit(ch)) continue;
            printf("*");
            passw[p++]=ch;
        }
        passw[p]=0;
    }

        int i=0;
        while(!feof(fp))
        {
            fscanf(fp,"%s %s",user_manager[i].account,user_manager[i].passw);
            i++;
        }

    if(strcmp(account,"666666")==0 && strcmp(passw,"666666")==0)    //管理员初始密码
    {
        menu_manager();
    }
    else
    {
        if((fp=fopen("C:\\user_manager.txt","r+"))==NULL)
        {
            printf("文件打开失败!\n");
            system("pause");
        }

        i-=1;
        int flag=0;
        for(;i>=0;i--)
            if(strcmp(account,user_manager[i].account)==0 && strcmp(passw,user_manager[i].passw)==0) flag=1;

        if(flag==0)
        {
            printf("\n账号或密码输入有误或不存在此账户\n\n");
            system("pause");
            pre_login();
        }
        else
        {
            printf("\n\n登陆成功!\n");
            Sleep(500);
            menu_manager();
        }
    }
}


int user_stu_login()
{
    char ch,account[20],passw[20];
    int p,i;
    FILE *fp;
    fp=fopen("C:\\user_stu.txt","r+");

    system("color 9F");
    fflush(stdin);
    printf("\n请输入学生账号:\n");
    scanf("%s",account);
    printf("请输入密码:\n");
    p=0;

    //输入密码显示星号
    {
        while((ch=getch())!='\r')
        {
            if(ch==8)
            {
                putchar('\b');
                putchar(' ');
                putchar('\b');
                if(p>0) p--;
            }
            if(!isalpha(ch) && !isdigit(ch)) continue;
            printf("*");
            passw[p++]=ch;
        }
        passw[p]=0;
    }


    i=0;
    while(!feof(fp))
    {
        fscanf(fp,"%s %s",user_stu[i].account,user_stu[i].passw);
        i++;
    }

    int flag=0;
    for(;i>=0;i--)
        if(strcmp(account,user_stu[i].account)==0 && strcmp(passw,user_stu[i].passw)==0) flag=1;

    if(flag==0)
    {
        printf("\n账号或密码输入有误或不存在此账户\n\n");
        system("pause");
        pre_login();
    }
    else
    {
        printf("\n\n登陆成功!\n");
        Sleep(500);
        menu_stu();
    }
}


int start()
{
    int i,j;
    system("color 9F");
    printf("\n\n\t\t\t\t欢迎使用学生管理系统\n\n");
    printf("\t\t\t\t程序猿：腾腾儿娃\n\n");
    printf("\n\t\t");
    printf("\t\t系统正在启动，请稍等...\n\n\t\t");

    for(i=0;i<=50;i++)
    {
        Sleep(30);
        printf(">");
    }
    printf("\n");
    pre_login();
}


int main()
{
    start();
}

